urlSamples <- "http://www.waterqualitydata.us/Result/search?characteristicName=Nitrogen%3BNitrate+as+N%3BNitrite+as+N%3BNitrogen+as+N%3BNitrite%3BNitrate%3BNitrate+as+NO3%3BOrganic+nitrogen%3BOrganic+Nitrogen+as+N%3BInorganic+nitrogen+(nitrate+and+nitrite)+as+N%3BInorganic+nitrogen+(nitrate+and+nitrite)&mimeType=tsv"
h <- basicHeaderGatherer()
library("fields", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("extrafont", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("intervals", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("plyr", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("outliers", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("RCurl", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("reshape2", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("stringr", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
library("survival", lib.loc="C:/Users/jlthomps/Documents/R/R-3.0.2/library")
library("zoo", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
h <- basicHeaderGatherer()
doc <- getURI(url, headerfunction = h$update)
str(url)
doc <- getURI(urlSamples, headerfunction = h$update)
urlSamples
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
urlSamples <- "http://www.waterqualitydata.us/Result/search?characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
urlSamples
retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE)
urlSamples <- "http://www.waterqualitydata.us/Result/search?siteType=Estuary%3BGlacier%3BLake%2C+Reservoir%2C+Impoundment%3BLand%3BOcean%3BStream&sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&mimeType=tsv"
retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-2008&startDateHi=01-01-2014&mimeType=tsv"
retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateHi=12-31-01-1979&mimeType=tsv"
retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateHi=12-31-01-1979&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
str(retval)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-1980&startDateHi=12-31-1989&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
Samples <- retval
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-1990&startDateHi=12-31-1994&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
Samples <- rbind(retval,Samples)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-1995&startDateHi=12-31-1999&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
Samples <- rbind(retval,Samples)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-2000&startDateHi=12-31-2004&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
Samples <- rbind(retval,Samples)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-2005&startDateHi=12-31-2007&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
Samples <- rbind(retval,Samples)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-2008&startDateHi=01-01-2014&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
Samples <- rbind(retval,Samples)
str(Samples)
Summary(Samples)
summary(Samples)
View(Samples)
siteID <- "11NPSWRD_WQX-SACN_10"
characteristicName <- "NITROGEN"
startDate <- "2005-01-01"
endDate <- "2012-01-01"
Sample <- getSTORETSampleData(siteID,characteristicName,startDate,endDate)
getSTORETSampleData
getWQPData(siteID,characteristicName,startDate,endDate)
getWQPData
baseURL <- "http://www.waterqualitydata.us/Result/search?siteid="
url <- paste(baseURL, siteID, "&characteristicName=",
characteristicName, "&startDateLo=", startDate, "&startDateHi=",
endDate, "&countrycode=US&mimeType=tsv", sep = "")
url
siteID <- "11NPSWRD_WQX-SACN_10"
characteristicName <- "Nitrogen"
startDate <- "2005-01-01"
endDate <- "2012-01-01"
Sample <- getSTORETSampleData(siteID,characteristicName,startDate,endDate)
Sample <- suppresswarnings(getSTORETSampleData(siteID,characteristicName,startDate,endDate))
Sample <- suppressWarnings(getSTORETSampleData(siteID,characteristicName,startDate,endDate))
summary(Sample)
siteID <- "11NPSWRD_WQX-SACN_10"
characteristicName <- "Nitrogen"
startDate <- "2005-01-01"
endDate <- "2012-01-01"
Sample <- suppressWarnings(getSTORETSampleData(siteID,characteristicName,startDate,endDate))
summary(Sample)
length(Sample)
Daily <- getDVData(siteID,"00060",startDate,endDate)
siteID <- "05342000"
Daily <- getDVData(siteID,"00060",startDate,endDate)
siteID <- "05342000"
Daily <- getDVData(siteID,"00060",startDate,endDate)
summary(Daily)
length(Daily)
INFO<-getMetaData(siteID_)
INFO<-getMetaData(siteID)
Sample<-mergeReport()
plotFluxQ(localSample=Sample,localINFO=INFO,qUnit=2,logScale=TRUE,fluxUnit=3,tinyPlot=FALSE,fluxMax=NA,fluxMin=NA)
library(EGRET)
plotFluxQ(localSample=Sample,localINFO=INFO,qUnit=2,logScale=TRUE,fluxUnit=3,tinyPlot=FALSE,fluxMax=NA,fluxMin=NA)
INFO
plotFluxQ(localSample=Sample,localINFO=INFO,qUnit=2,logScale=TRUE,fluxUnit=2,tinyPlot=FALSE,fluxMax=NA,fluxMin=NA)
plotConcQ()
plotConcTime()
plotFluxHist()
boxConcMonth
boxConcMonth()
siteID <- "05484500"
startDate <- "2013-03-01"
endDate <- "2013-07-31"
DailyNitrogen <- getDVData(siteID,"99133",startDate,endDate)
plotConctime
plotConcTime
View(DailyNitrogen)
startDt <- strftime(min(DailyNitrogen$Date),format="%Y.%m.%d")
endDt <- strftime(max(DailyNitrogen$Date), format="%Y.%m.%d")
plot_x<-DailyNitrogen$Q
ytop <- max(plot_x)
plot(DailyNitrogen$Date,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$Date),max(DailyNitrogen$Date),dateInt*3600)
a<-seq(min(DailyNitrogen$Date),max(DailyNitrogen$Date),8*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
mtext("Datetime",side=1,line=6)
plot(DailyNitrogen$Date,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$Date),max(DailyNitrogen$Date),8*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
mtext("Datetime",side=1,line=6)
par()
plot(DailyNitrogen$Date,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$Date),max(DailyNitrogen$Date),8*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
mtext("Datetime",side=1,line=6)
par(new=T)
plot(DailyNitrogen$Date,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$Date),max(DailyNitrogen$Date),8*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
mtext("Datetime",side=1,line=6)
dev()
dev.new()
dev.off()
dev.new()
plot(DailyNitrogen$Date,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$Date),max(DailyNitrogen$Date),8*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
mtext("Datetime",side=1,line=6)
a
min(DailyNitrogen$Date)
max(DailyNitrogen$Date)
DailyNitrogen$datetime<-as.POSIXct(DailyNitrogen$Date)
a<-seq(min(DailyNitrogen$datetime),max(DailyNitrogen$datetime),8*3600)
a
a<-seq(min(DailyNitrogen$datetime),max(DailyNitrogen$datetime),24*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
mtext("Datetime",side=1,line=6)
a
dev.new()
plot(DailyNitrogen$datetime,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$datetime),max(DailyNitrogen$datetime),24*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
dev.off()
dev.new()
plot(DailyNitrogen$datetime,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$datetime),max(DailyNitrogen$datetime),96*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
dev.new()
plot(DailyNitrogen$datetime,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$datetime),max(DailyNitrogen$datetime),192*3600)
axis.POSIXct(1,at=a,format="%m/%d %H:%M",las=2)
mtext("Datetime",side=1,line=6)
dev.new()
plot(DailyNitrogen$datetime,DailyNitrogen$Q,xaxt="n",xlab="",ylim=c(0,ytop),ylab="Nitrogen",col="red",type="l",main=paste(siteID,startDt,"-",endDt,sep=" "))
a<-seq(min(DailyNitrogen$datetime),max(DailyNitrogen$datetime),192*3600)
axis.POSIXct(1,at=a,format="%m/%d",las=2)
mtext("Datetime",side=1,line=6)
summary(DailyNitrogen)
str(DailyNitrogen)
saveResults
?save.image
rm Daily
rm(Daily)
rm(DailyNitrogen)
rm(INFO)
rm(Sample)
rm(a)
rm(baseURL)
rm(characteristicName)
rm(retval)
rm(endDate)
rm(endDt)
rm(h)
rm(plot_x)
rm(startDate)
rm(siteID)
rm(startDt)
rm(url)
rm(urlSamples)
rm(ytop)
save(Samples,file="jim_slide.RData")
SamplesSub <- Samples[,c("OrganizationIdentifier","OrganizationFormalName")]
SamplesSub <- Samples[,c("OrganizationIdentifier","OrganizationFormalName")]
urlSites <- "http://www.waterqualitydata.us/Station/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-2008&startDateHi=01-01-2014&mimeType=tsv"
suppressWarnings(Sites <- read.delim(urlSites, header=TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill=TRUE))
urlSites <- "http://www.waterqualitydata.us/Station/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&mimeType=tsv"
suppressWarnings(Sites <- read.delim(urlSites, header=TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill=TRUE))
urlSites <- "http://www.waterqualitydata.us/Station/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&mimeType=tsv"
suppressWarnings(Sites <- read.delim(urlSites, header=TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill=TRUE))
?read.delim
Sites <- read.delim("Station.tsv", header=TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill=TRUE))
Sites <- read.delim("Station.tsv", header=TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill=TRUE)
View(Sites)
Sites <- read.delim("Station.tsv", quote="\"", sep='\t', colClasses=c('character'))
Sites[70281,]
Sites <- read.delim("Station.tsv", quote="\"", sep='\t', colClasses=c('character'))
View(Sites)
str(Sites)
SamplesSub <- Samples[,c("OrganizationIdentifier","ActivityMediaName","ActivityStartDate","CharacteristicName","ResultMeasureValue")]
SamplesSub <- Samples[,c("OrganizationIdentifier","MonitoringLocationIdentifier","ActivityMediaName","ActivityStartDate","CharacteristicName","ResultMeasureValue")]
SamplesSub[1,]
substr(SamplesSub[1,4],nchar(SamplesSub[1,4])-4,4)
substr(SamplesSub[1,4],nchar(SamplesSub[1,4])-4,nchar(SamplesSub[1,4]))
substr(SamplesSub[1,4],nchar(SamplesSub[1,4])-3,nchar(SamplesSub[1,4]))
SamplesSub$Year <- substr(SamplesSub$ActivityStartDate,nchar(SamplesSub$ActivityStartDate)-3,nchar(SamplesSub$ActivityStartDate))
str(SamplesSub)
unique(SamplesSub$CharacteristicName)
SamplesSub[which(SamplesSub$CharacteristicName==""),]
SamplesSub <- SamplesSub[which(-SamplesSub$CharacteristicName==""),]
SamplesSub <- SamplesSub[which(SamplesSub$CharacteristicName!=""),]
unique(SamplesSub$CharacteristicName)
unique(SamplesSub$Year)
grep("4-25","-")
?grep
grep("-","4-25")
grep("-","4525")
substr("2004-9-84",1,4)
SamplesSub$Year <- ifelse(grep(SamplesSub$Year)>0,substr(SamplesSub$ActivityStartDate,1,4),SamplesSub$year)
SamplesSub$Year <- ifelse(grep("-",SamplesSub$Year)>0,substr(SamplesSub$ActivityStartDate,1,4),SamplesSub$year)
ifelse(grep("-",SamplesSub$Year)>0,substr(SamplesSub$ActivityStartDate,1,4),SamplesSub$year)
SamplesSub$Year <- substr(SamplesSub$ActivityStartDate,nchar(SamplesSub$ActivityStartDate)-3,nchar(SamplesSub$ActivityStartDate))
ifelse(grep("-",SamplesSub$Year)==1,substr(SamplesSub$ActivityStartDate,1,4),SamplesSub$year)
ifelse(grep("-",SamplesSub$Year)==1,substr(SamplesSub$ActivityStartDate,1,4),SamplesSub$Year)
unique(SamplesSub$Year)
SamplesSub$Year <- ifelse(grep("-",SamplesSub$Year)==1,substr(SamplesSub$ActivityStartDate,1,4),SamplesSub$Year)
SamplesSub$Year[which(grep("-",SamplesSub$Year)==1)] <- substr(SamplesSub$ActivityStartDate,1,4)
unique(SamplesSub$Year)
a<-SamplesSub$Year[which(grep("-",SamplesSub$Year)==1)]
a
a<-SamplesSub$Year[which(grep("-",SamplesSub$Year)==1),]
a<-SamplesSub$Year[which(grep("-",SamplesSub$Year)==1)]
a<-SamplesSub$Year[which(length(grep("-",SamplesSub$Year))==1)]
a
a<-grep("-","2003-08-12")
a
a<-grep("-","08-12")
a
a<-grep("-",SamplesSub$Year[17])
a
SamplesSub$Year[17]
View(SamplesSub)
SamplesSub[which(SamplesSub$Year=="0-10"),]
SamplesSub$Year[490154]
a<-grep("-",SamplesSub$Year[490154])
a
SamplesSub$YearNum <- ifelse(grep("-",SamplesSub$Year)==1,substr(SamplesSub$ActivityStartDate,1,4),SamplesSub$Year)
if(grep("-",SamplesSub$Year)==1){SamplesSub$Year<-substr(SamplesSub$ActivityStartDate,1,4)}
SamplesSub$Year <- substr(SamplesSub$ActivityStartDate,nchar(SamplesSub$ActivityStartDate)-3,nchar(SamplesSub$ActivityStartDate))
substr("2008-2-15",5,5)
SamplesSub <- Samples[,c("OrganizationIdentifier","MonitoringLocationIdentifier","ActivityMediaName","ActivityStartDate","CharacteristicName","ResultMeasureValue")]
SamplesSub$Year <- ifelse(substr(SamplesSub$ActivityStartDate,5,5)=="-",substr(SamplesSub$ActivityStartDate,1,4),substr(SamplesSub$ActivityStartDate,nchar(SamplesSub$ActivityStartDate)-3,nchar(SamplesSub$ActivityStartDate)))
unique(SamplesSub$Year)
SamplesSub <- SamplesSub[which(SamplesSub$CharacteristicName!=""),]
?aggregate
SamplesCounts <- aggregate(x=SamplesSub$ResultMeasureValue,by=list(SamplesSub$MonitoringLocationIdentifier,SamplesSub$Year),FUN="count")
SamplesCounts <- aggregate(SamplesSub$ResultMeasureValue ~ SamplesSub$MonitoringLocationIdentifier + SamplesSub$Year, data=SamplesSub, FUN=length)
Samples<-load(jim_slide.RData)
Samples<-load("jim_slide.RData")
rm(Samples)
load(jim_slide.RData)
load("jim_slide.RData")
SamplesSub <- Samples[,c("OrganizationIdentifier","MonitoringLocationIdentifier","ActivityMediaName","ActivityStartDate","CharacteristicName","ResultMeasureValue")]
urlSites <- "http://www.waterqualitydata.us/Station/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&mimeType=tsv"
Sites <- read.delim("Station.tsv", header=TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill=TRUE)
SamplesSub$Year <- ifelse(substr(SamplesSub$ActivityStartDate,5,5)=="-",substr(SamplesSub$ActivityStartDate,1,4),substr(SamplesSub$ActivityStartDate,nchar(SamplesSub$ActivityStartDate)-3,nchar(SamplesSub$ActivityStartDate)))
SamplesSub <- SamplesSub[which(SamplesSub$CharacteristicName!=""),]
SamplesCounts <- aggregate(SamplesSub$ResultMeasureValue ~ SamplesSub$MonitoringLocationIdentifier + SamplesSub$Year, data=SamplesSub, FUN=length)
SamplesCountsSub <- SamplesCounts[which(SamplesCounts$ResultMeasureValue>5),]
str(SamplesCounts)
SamplesCountsSub <- SamplesCounts[which(SamplesCounts$SamplesSub$ResultMeasureValue>5),]
colnames(SamplesCounts) <- c("Station","Year","Count")
SamplesCountsSub <- SamplesCounts[which(SamplesCounts$Count>5),]
unique(SamplesCountsSub$Year)
YearSamples <- aggregate(SamplesCountsSub$Count ~ SamplesCountsSub$Year, data=SamplesCountsSub, FUN=length)
View(YearSamples)
urlSamples <- "http://www.waterqualitydata.us/Result/search?sampleMedia=Water&characteristicType=Nutrient&characteristicName=Nitrogen%3BNitrogen+as+N%3BNitrate+as+N%3BNitrate+as+NO3%3BOrganic+nitrogen%3BNitrogen+as+NO3%3BOrganic+Nitrogen&startDateLo=01-01-2000&startDateHi=12-31-2004&mimeType=tsv"
suppressWarnings(retval <- read.delim(urlSamples, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE))
View(YearSamples)
Samples <- Samples[which(Samples$Year!="2004"),]
load("jim_slide.RData")
SamplesSub <- Samples[,c("OrganizationIdentifier","MonitoringLocationIdentifier","ActivityMediaName","ActivityStartDate","CharacteristicName","ResultMeasureValue")]
SamplesSub$Year <- ifelse(substr(SamplesSub$ActivityStartDate,5,5)=="-",substr(SamplesSub$ActivityStartDate,1,4),substr(SamplesSub$ActivityStartDate,nchar(SamplesSub$ActivityStartDate)-3,nchar(SamplesSub$ActivityStartDate)))
SamplesSub <- SamplesSub[which(SamplesSub$Year!="2004"),]
Samples <- rbind(retval,Samples)
SamplesSub <- Samples[,c("OrganizationIdentifier","MonitoringLocationIdentifier","ActivityMediaName","ActivityStartDate","CharacteristicName","ResultMeasureValue")]
SamplesSub$Year <- ifelse(substr(SamplesSub$ActivityStartDate,5,5)=="-",substr(SamplesSub$ActivityStartDate,1,4),substr(SamplesSub$ActivityStartDate,nchar(SamplesSub$ActivityStartDate)-3,nchar(SamplesSub$ActivityStartDate)))
SamplesSub <- SamplesSub[which(SamplesSub$CharacteristicName!=""),]
SamplesCounts <- aggregate(SamplesSub$ResultMeasureValue ~ SamplesSub$MonitoringLocationIdentifier + SamplesSub$Year, data=SamplesSub, FUN=length)
colnames(SamplesCounts) <- c("Station","Year","Count")
SamplesCountsSub <- SamplesCounts[which(SamplesCounts$SamplesSub$Count>5),]
YearSamples <- aggregate(SamplesCountsSub$Count ~ SamplesCountsSub$Year, data=SamplesCountsSub, FUN=length)
SamplesCountsSub <- SamplesCounts[which(SamplesCounts$Count>5),]
YearSamples <- aggregate(SamplesCountsSub$Count ~ SamplesCountsSub$Year, data=SamplesCountsSub, FUN=length)
View(YearSamples)
colnames(YearSamples) <- c("Year","Count")
hist(YearSamples$Count,col"blue",ylim=c(1980,2013))
hist(YearSamples$Count,col="blue",ylim=c(1980,2013))
hist(YearSamples,col="blue",ylim=c(1980,2013))
plot(YearSamples$Year,YearSamples$Count,type="o",col="blue")
plot(YearSamples$Year,YearSamples$Count,type="o",col="blue",xlim=c(0,3500))
plot(YearSamples$Year,YearSamples$Count,type="o",col="blue",ylim=c(0,3500))
hist(SamplesSub$Year)
hist(asNumeric(SamplesSub$Year))
hist(as.Numeric(SamplesSub$Year))
hist(as.numeric(SamplesSub$Year))
?hist
hist(as.numeric(SamplesSub$Year),breaks=34)
hist(as.numeric(SamplesSub$Year),breaks=34,col=heat.colors(3500))
hist(as.numeric(SamplesSub$Year),breaks=34,col=heat.colors(34))
hist(as.numeric(SamplesSub$Year),breaks=34,col="yellow")
Year <- as.numeric(SamplesSub$Year)
hist(Year,breaks=34,col="yellow")
max(YearSamples$Count)
hist(Year,breaks=34,col="yellow",main="Number of nitrate samples per year")
plot(YearSamples$Year,YearSamples$Count,type="o",col="blue",ylim=c(0,3500))
?plot
YearSamples <- aggregate(SamplesCountsSub$Station ~ SamplesCountsSub$Year, data=SamplesCountsSub, FUN=length)
colnames(YearSamples) <- c("Year","Station")
View(YearSamples)
plot(YearSamples$Year,YearSamples$Station,type="s",col="blue",ylim=c(0,3500),main="Number of stations with 5 or more nitrate samples per year",xlab="Year",ylab="Number of stations")
plot(YearSamples$Year,YearSamples$Station,type="p",col="blue",ylim=c(0,3500),main="Number of stations with 5 or more nitrate samples per year",xlab="Year",ylab="Number of stations")
plot(YearSamples$Year,YearSamples$Station,type="p",pch=9,col="blue",ylim=c(0,3500),main="Number of stations with 5 or more nitrate samples per year",xlab="Year",ylab="Number of stations")
plot(YearSamples$Year,YearSamples$Station,type="p",pch=19,col="blue",ylim=c(0,3500),main="Number of stations with 5 or more nitrate samples per year",xlab="Year",ylab="Number of stations")
View(YearSamples)
Stations2005 <- SamplesCountsSubs[which(SamplesCountsSubs$Year=="2005"),c("Station","Count")]
Stations2005 <- SamplesCountsSub[which(SamplesCountsSub$Year=="2005"),c("Station","Count")]
Stations2012 <- SamplesCountsSub[which(SamplesCountsSub$Year=="2012"),c("Station","Count")]
SitesSub <- Sites[,c("MonitoringLocationIdentifier","LatitudeMeasure","LongitudeMeasure")]
?merge
Stations2005map <- merge(Stations2005,SitesSub,by.x="Station",by.y="MonitoringLocationIdentifier")
Stations2012map <- merge(Stations2012,SitesSub,by.x="Station",by.y="MonitoringLocationIdentifier")
library("maps", lib.loc="C:/Users/jlthomps/Documents/R/win-library/2.14")
install.packages("mapdata")
map("worldHires","usa",col="gray95",fill=TRUE)
library(mapdata)
map("worldHires","usa",col="gray95",fill=TRUE)
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col="red",cex=0.5)
map("worldHires","usa",col="gray95",fill=TRUE,xlim=c(-124,-62),ylim=c(18,48))
map("worldHires","usa",col="gray95",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
?map
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col="red",cex=0.5)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col="red",cex=Stations2005map$Count)
?points
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Count,cex=0.5)
?colorRampPalette
a<-colorRampPalette(c("#000099","#B2B2E0"))
a
Year <- as.numeric(SamplesSub$Year)
hist(Year,breaks=34,col="yellow",main="Number of nitrate samples per year")
SamplesCounts <- aggregate(SamplesSub$ResultMeasureValue ~ SamplesSub$MonitoringLocationIdentifier + SamplesSub$Year, data=SamplesSub, FUN=length)
colnames(SamplesCounts) <- c("Station","Year","Count")
SamplesCountsSub <- SamplesCounts[which(SamplesCounts$Count>5),]
YearSamples <- aggregate(SamplesCountsSub$Station ~ SamplesCountsSub$Year, data=SamplesCountsSub, FUN=length)
colnames(YearSamples) <- c("Year","Station")
Year <- as.numeric(SamplesSub$Year)
hist(Year,breaks=34,col="yellow",main="Number of nitrate samples per year")
SamplesSub <- SamplesSub[which(SamplesSub$Year!="1980"),]
SamplesCounts <- aggregate(SamplesSub$ResultMeasureValue ~ SamplesSub$MonitoringLocationIdentifier + SamplesSub$Year, data=SamplesSub, FUN=length)
colnames(SamplesCounts) <- c("Station","Year","Count")
SamplesCountsSub <- SamplesCounts[which(SamplesCounts$Count>5),]
YearSamples <- aggregate(SamplesCountsSub$Station ~ SamplesCountsSub$Year, data=SamplesCountsSub, FUN=length)
colnames(YearSamples) <- c("Year","Station")
plot(YearSamples$Year,YearSamples$Station,type="p",pch=19,col="blue",ylim=c(0,3500),main="Number of stations with 5 or more nitrate samples per year",xlab="Year",ylab="Number of stations")
Year <- as.numeric(SamplesSub$Year)
hist(Year,breaks=34,col="yellow",main="Number of nitrate samples per year")
View(YearSamples)
hist(Year,breaks=33,col="yellow",main="Number of nitrate samples per year")
Year <- as.numeric(SamplesSub$Year)
hist(Year,breaks=33,col="yellow",main="Number of nitrate samples per year")
View(YearSamples)
Year <- as.numeric(SamplesSub$Year)
hist(Year,breaks=33,col="yellow",main="Number of nitrate samples per year")
unique(SamplesSub$Year)
unique(Year)
YearCounts <- aggregate(SamplesCountsSub$Count ~ SamplesCountsSub$Year, data=SamplesCountsSub, FUN=sum)
colnames(YearSamples) <- c("Year","Count")
?barplot
barplot(YearCounts$Count,names.arg=YearCounts$Year,col="yellow")
a<-YearCounts$Count
a
str(a)
colnames(YearCounts) <- c("Year","Count")
barplot(YearCounts$Count,names.arg=YearCounts$Year,col="yellow")
barplot(YearCounts$Count,names.arg=YearCounts$Year,col="yellow",main="Number of nitrate samples per year")
?seq
max(Stations2005map$Count)
Stations2005map$Col <- colorRampBlue(10)[seq(0,350,35)]
colorRampBlue <- colorRampPalette(c("#B2B2E0","000099"))
Stations2005map$Col <- colorRampBlue(10)[seq(0,350,35)]
Stations2005map$Col <- colorRampBlue[seq(0,350,35)]
Stations2005map$Col <- colorRampBlue(10)
mapColors <- colorRampBlue(10)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=mapColors,cex=0.5)
legend("topleft",fill=mapColors,col=mapColors)
?legend
str(mapColors)
mapColors
colorRampBlue <- colorRampPalette(c("#99CCFF","000099"))
mapColors <- colorRampBlue(10)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=mapColors,cex=0.5)
colorRampBlue <- colorRampPalette(c("#660033","000099"))
mapColors <- colorRampBlue(10)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=mapColors,cex=0.5)
colorRampBlue <- colorRampPalette(c("#CCFFFF","000099"))
mapColors <- colorRampBlue(10)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=mapColors,cex=0.5)
colorRampBlue <- colorRampPalette(c("#CCFFFF","0000CC"))
mapColors <- colorRampBlue(10)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=mapColors,cex=0.5)
mapColors
Stations2005map$Col <- ifelse(Stations2005map$Count<=70,mapColors[1],Stations2005map$Count<=140,mapColors[2],Stations2005map$Count<=210,mapColors[3],Stations2005map$Count<=280,mapColors[4],Stations2005map$Count,mapColors[5])
?ifelse
Stations2005map$Col <- ifelse(Stations2005map$Count<=70,mapColors[1],ifelse(Stations2005map$Count<=140,mapColors[2],ifelse(Stations2005map$Count<=210,mapColors[3],ifelse(Stations2005map$Count<=280,mapColors[4],Stations2005map$Count,mapColors[5]))))
Stations2005map$Col <- ifelse(Stations2005map$Count<=70,mapColors[1],ifelse(Stations2005map$Count<=140,mapColors[2],ifelse(Stations2005map$Count<=210,mapColors[3],ifelse(Stations2005map$Count<=280,mapColors[4],ifelse(Stations2005map$Count,mapColors[5])))))
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
View(Stations2005map)
hist(Stations2005map$Count)
min(Stations2005map$Count)
max(Stations2005map$Count)
Stations2005map$Col <- ifelse(Stations2005map$Count<=10,mapColors[1],ifelse(Stations2005map$Count<=25,mapColors[2],ifelse(Stations2005map$Count<=50,mapColors[3],ifelse(Stations2005map$Count<=75,mapColors[4],ifelse(Stations2005map$Count<=350,mapColors[5])))))
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
colorRampBlue <- colorRampPalette(c("#CCFFFF","000014"))
mapColors <- colorRampBlue(5)
Stations2005map$Col <- ifelse(Stations2005map$Count<=10,mapColors[1],ifelse(Stations2005map$Count<=25,mapColors[2],ifelse(Stations2005map$Count<=50,mapColors[3],ifelse(Stations2005map$Count<=75,mapColors[4],ifelse(Stations2005map$Count<=350,mapColors[5])))))
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
colorRampBlue <- colorRampPalette(c("#CCFFFF","00003D"))
mapColors <- colorRampBlue(5)
Stations2005map$Col <- ifelse(Stations2005map$Count<=10,mapColors[1],ifelse(Stations2005map$Count<=25,mapColors[2],ifelse(Stations2005map$Count<=50,mapColors[3],ifelse(Stations2005map$Count<=75,mapColors[4],ifelse(Stations2005map$Count<=350,mapColors[5])))))
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
colorRampBlue <- colorRampPalette(c("#CCFFFF","#00003D"))
mapColors <- colorRampBlue(5)
Stations2005map$Col <- ifelse(Stations2005map$Count<=10,mapColors[1],ifelse(Stations2005map$Count<=25,mapColors[2],ifelse(Stations2005map$Count<=50,mapColors[3],ifelse(Stations2005map$Count<=75,mapColors[4],ifelse(Stations2005map$Count<=350,mapColors[5])))))
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
?gsub
?legend
leg.txt <- c("0 to 10","11 to 25","26 to 50", "51 to 75", "75 to 350")
legend("topleft",fill=mapColors,col=mapColors,legend=leg.txt)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49))
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49),main="Sites with more than 5 samples in 2005")
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49),main="Sites with more than 5 samples in 2005")
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
?map
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49),mar=c(1,1,par("mar")[3],0.1),main="Sites with more than 5 samples in 2005")
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5)
leg.txt <- c("0 to 10","11 to 25","26 to 50", "51 to 75", "75 to 350")
legend("bottomleft",fill=mapColors,col=mapColors,legend=leg.txt)
?points
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49),mar=c(1,1,par("mar")[3],0.1),main="Sites with more than 5 samples in 2005")
points(Stations2005map$LongitudeMeasure,Stations2005map$LatitudeMeasure,pch=19,col=Stations2005map$Col,cex=0.5,main="Sites with more than 5 samples in 2005")
leg.txt <- c("0 to 10","11 to 25","26 to 50", "51 to 75", "75 to 350")
legend("bottomleft",fill=mapColors,col=mapColors,legend=leg.txt)
?title
title(main="Sites with more than 5 samples in 2005")
min(Stations2012map$Count)
max(Stations2012map$Count)
View(Stations2012map)
colorRampBlue <- colorRampPalette(c("#CCFFFF","#00003D"))
mapColors <- colorRampBlue(5)
Stations2012map$Col <- ifelse(Stations2012map$Count<=10,mapColors[1],ifelse(Stations2012map$Count<=25,mapColors[2],ifelse(Stations2012map$Count<=50,mapColors[3],ifelse(Stations2012map$Count<=75,mapColors[4],ifelse(Stations2012map$Count<=350,mapColors[5])))))
map("worldHires","usa",col="gray80",fill=TRUE,xlim=c(-124,-62),ylim=c(18,49),mar=c(1,1,par("mar")[3],0.1))
points(Stations2012map$LongitudeMeasure,Stations2012map$LatitudeMeasure,pch=19,col=Stations2012map$Col,cex=0.5)
leg.txt <- c("0 to 10","11 to 25","26 to 50", "51 to 75", "75 to 350")
legend("bottomleft",fill=mapColors,col=mapColors,legend=leg.txt)
title(main="Sites with more than 5 samples in 2012")
library(dataRetrieval)
siteNumber <- "01491000"
parameterCd <- c("00618","71851")
startDate <- "1979-10-11"
endDate <- "2012-12-18"
dissolvedNitrate <- getRawQWData(siteNumber,parameterCd,startDate,endDate)
library(dataRetrieval)
siteNumber <- "01491000"
parameterCd <- c("00618","71851")
startDate <- "1979-10-11"
endDate <- "2012-12-18"
specificCond <- getWQPData('WIDNR_WQX-10032762',
'Specific conductance', '', '')
getWQPData
specificCond <- getWQPData('WIDNR_WQX-10032762', 'Specific conductance')
specificCond <- getWQPData('WIDNR_WQX-10032762', 'Specific conductance','','')
specificCond <- getWQPData('WIDNR_WQX-10032762', 'Specific conductance','', '')
specificCond <- getWQPData('WIDNR_WQX-10032762','Specific conductance','','')
library(tools)
setwd("C:/Users/jlthomps/Desktop/git/usgs-r/src/contrib")
write_PACKAGES(verbose=TRUE, subdirs=TRUE, type="source")
setwd("C:/Users/jlthomps/Desktop/git/usgs-r/bin/windows/contrib/3.0")
write_PACKAGES(verbose=TRUE, subdirs=TRUE, type="win.binary")
