library(tools)
setwd("C:/Users/jlthomps/Desktop/git/usgs-r/src/contrib")
write_PACKAGES(verbose=TRUE, subdirs=TRUE, type="source")
setwd("C:/Users/jlthomps/Desktop/git/usgs-r/bin/windows/contrib/3.0")
write_PACKAGES(verbose=TRUE, subdirs=TRUE, type="win.binary")
install.packages(c("EflowStats","NWCCompare"),repos="http://usgs-r.github.com",type="source")
library(EflowStats)
library(NWCCompare)
# Run stats and differences on USGS observed and modeled daily discharge data
model_url="http://cida.usgs.gov/nwc/thredds/sos/watersmart/stats/stats-SE-DENSE2-2.03.nc?request=GetObservation&service=SOS&version=1.0.0&offering"
diffInputsv <- diffInputs(model_url)
startdate <- diffInputsv[[1]]
enddate <- diffInputsv[[2]]
x_urls <- diffInputsv[[3]]
d_urls <- diffInputsv[[4]]
m_urls <- diffInputsv[[5]]
sites <- diffInputsv[[6]]
statsout <- calculateStatsDiffs(sites, startdate, enddate, getXMLWML1.1Data, x_urls, getDrainageArea, d_urls, SWE_CSV_IHA, m_urls)
# Run stats on modeled huc12s
sites<-"031401020800"
startdate <- "2008-10-01"
enddate <- "2010-09-29"
stats<-"rateStat,magnifSeven,magStat,flowStat,durStat,timStat"
sos<-"http://cida-eros-wsqa.er.usgs.gov:8081/thredds/sos/watersmart/HUC12_data/HUC12_Q.nc"
observedProperty="MEAN_streamflow"
wfsUrl<-'http://cida-eros-wsdev.er.usgs.gov:8081/geoserver/NWC/ows'
wfsTypename='NWC:huc12_SE_Basins_v2'
wfsFilterProperty='NWC:HUC12'
wfsAreaPropertyname='NWC:mi2'
sites<-read.csv(header=F,colClasses=c("character"),text=sites)
urls<-paste(sos,'?request=GetObservation&service=SOS&version=1.0.0&observedProperty=',observedProperty,'&offering=',sites,sep="")
statsout <- calculateStatsGroups(stats, sites, startdate, enddate, SWE_CSV_IHA, urls, getWFSFieldAsNumeric, drain_args=list(wfs_url=wfsUrl, wfsTypename=wfsTypename, wfsProperty=wfsFilterProperty, wfsPropertyname=wfsAreaPropertyname), drain_site_param='wfsLiteral')
# Run stats on USGS observed daily discharge data
sites <- '02177000,02178400'
startdate <- "2008-10-01"
enddate <- "2013-09-29"
stats<-"rateStat,magnifSeven,magStat,flowStat,durStat,timStat,otherStat"
nwisDvUrl <- "http://waterservices.usgs.gov/nwis/dv/?format=waterml,1.1&sites="
offering <- "00003"
property <- "00060"
drainage_url <- "http://waterservices.usgs.gov/nwis/site/?siteOutput=Expanded&site="
sites<-read.csv(header=F,colClasses=c("character"),text=sites)
x_urls<-paste(nwisDvUrl, sites, "&startDT=", startdate, "&endDT=", enddate, "&statCd=", offering, "&parameterCd=", property, sep = "")
d_urls<-paste(drainage_url, sites, sep = "")
statsout <- calculateStatsGroups(stats, sites, startdate, enddate, getXMLWML1.1Data, x_urls, getDrainageArea, d_urls)
model_url = 'http://cida.usgs.gov/glri/afinch/thredds/out.nc?service=SOS&request=GetObservation&Version=1.0.0&offering=12006839&observedProperty=QAccCon'
library(XML)
library(zoo)
library(chron)
library(doBy)
library(hydroGOF)
library(EflowStats)
deciles <- function(x) {
isolateq <- x$discharge
sortq <- sort(isolateq)
deciles<-matrix(nrow=9,ncol=2)
deciles[1:9,1] <- seq(0.1,0.9,by=.1)
deciles[1,2] <- sortq[floor(findrank(length(sortq),0.9))]
deciles[2,2] <- sortq[floor(findrank(length(sortq),0.8))]
deciles[3,2] <- sortq[floor(findrank(length(sortq),0.7))]
deciles[4,2] <- sortq[floor(findrank(length(sortq),0.6))]
deciles[5,2] <- sortq[floor(findrank(length(sortq),0.5))]
deciles[6,2] <- sortq[floor(findrank(length(sortq),0.4))]
deciles[7,2] <- sortq[floor(findrank(length(sortq),0.3))]
deciles[8,2] <- sortq[floor(findrank(length(sortq),0.2))]
deciles[9,2] <- sortq[floor(findrank(length(sortq),0.1))]
return(deciles)
}
x_obs=SWE_CSV_IHA(model_url)
selqfile<-x_obs
tempdatafr<-data.frame(selqfile)
month_val<-rep(0,length(tempdatafr$date))
year_val<-rep(0,length(tempdatafr$date))
day_val<-rep(0,length(tempdatafr$date))
jul_val<-rep(0,length(tempdatafr$date))
wy_val<-rep(0,length(tempdatafr$date))
ones_val<-rep(1,length(tempdatafr$date))
qfiletempf<-data.frame(tempdatafr$date,tempdatafr$discharge,month_val,year_val,day_val,jul_val,wy_val)
colnames(qfiletempf)<-c('date','discharge','month_val','year_val','day_val','jul_val','wy_val')
qfiletempf$month_val<-substr(x_obs$date,6,7)
qfiletempf$month_val<-as.numeric(qfiletempf$month_val)
qfiletempf$year_val<-substr(x_obs$date,1,4)
qfiletempf$month_val<-substr(x_obs$date,6,7)
qfiletempf$month_val<-as.numeric(qfiletempf$month_val)
qfiletempf$year_val<-substr(x_obs$date,1,4)
qfiletempf$year_val<-as.numeric(qfiletempf$year_val)
qfiletempf$day_val<-substr(x_obs$date,9,10)
qfiletempf$day_val<-as.numeric(qfiletempf$day_val)
qfiletempf$jul_val<-strptime(x_obs$date, "%Y-%m-%d")$yday+1
qfiletempf$jul_val<-as.numeric(qfiletempf$jul_val)
qfiletempf$wy_val<-ifelse(as.numeric(qfiletempf$month_val)>=10,as.character(as.numeric(qfiletempf$year_val)+ones_val),qfiletempf$year_val)
obs_data<-qfiletempf
meanflowy<-meanflowbyyear(obs_data)
medflowy<-medflowbyyear(obs_data)
meanmonthly<-ma12.23(obs_data)
medmonthly<-ma12.23(obs_data, pref='median')
str(x_obs)
View(obs_data)
View(obs_data)
